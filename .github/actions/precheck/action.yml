name: Precheck
description: Fast guardrail (skip instead of failing)

inputs:
  vega_actions_enabled:
    description: Master on/off flag passed from workflow (vars.VEGA_ACTIONS_ENABLED). Defaults to "true".
    required: false
    default: "true"

# ⬇️ Expose outputs to the caller step (steps.p.outputs.ok)
outputs:
  ok:
    description: "String 'true' or 'false' to gate downstream jobs"
    value: ${{ steps.gate.outputs.ok }}

runs:
  using: "composite"
  steps:
    - shell: bash
      id: gate
      env:
        # Carries the input into the shell env
        VEGA_ACTIONS_ENABLED: ${{ inputs.vega_actions_enabled }}
        GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
      run: |
        set -e

        missing() { [ -z "${!1}" ]; }
        need() { if missing "$1"; then echo "::notice title=Precheck::Missing -> $1"; echo "ok=false" >> "$GITHUB_OUTPUT"; exit 0; fi; }

        # Require only the token (the workflow passes it via env)
        need GITHUB_TOKEN

        # Global enable/disable flag
        if [ "${VEGA_ACTIONS_ENABLED}" != "true" ]; then
          echo "::notice title=Precheck::VEGA_ACTIONS_ENABLED=false (skipping)"
          echo "ok=false" >> "$GITHUB_OUTPUT"
          exit 0
        fi

        # If we get here, we're good to run
        echo "ok=true" >> "$GITHUB_OUTPUT"
