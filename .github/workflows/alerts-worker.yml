name: alerts-worker

on:
  # Runs every 15 minutes. Adjust as you like or comment out to disable.
  schedule:
    - cron: "*/15 * * * *"
  # Manual run with optional overrides
  workflow_dispatch:
    inputs:
      universe_csv:
        description: "Override TRADINGVIEW_CSV_URL"
        required: false
        type: string
      earnings_csv:
        description: "Override COCKPIT_EARNINGS_CSV_URL"
        required: false
        type: string
      dry_run:
        description: "Run without sending email (if your script supports it)"
        required: false
        default: "false"
        type: choice
        options: ["false", "true"]

permissions:
  contents: read

jobs:
  run:
    name: Run alerts scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-actions.txt ]; then python -m pip install -r requirements-actions.txt; fi
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi

      - name: Run worker
        env:
          # required secrets
          SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}

          # repo vars (can be moved to secrets if you prefer)
          ALERTS_TO: ${{ vars.ALERTS_TO }}
          ALERTS_FROM: ${{ vars.ALERTS_FROM }}
          TRADINGVIEW_CSV_URL: ${{ inputs.universe_csv || vars.TRADINGVIEW_CSV_URL }}
          COCKPIT_EARNINGS_CSV_URL: ${{ inputs.earnings_csv || vars.COCKPIT_EARNINGS_CSV_URL }}

          # optional toggle from dispatch
          DRY_RUN: ${{ inputs.dry_run || 'false' }}
        run: |
          set -euo pipefail
          echo "Starting alerts workerâ€¦"
          # If your entrypoint is different, adjust this line:
          # Common patterns:
          #   python workers/alerts_worker.py
          #   python -m workers.alerts_worker
          #   python -m workers.main --job alerts
          if [ -f workers/alerts_worker.py ]; then
            python workers/alerts_worker.py
          else
            python -c "import workers, sys; print('You may need to set the correct worker entrypoint.'); sys.exit(1)"
          fi
