name: Universal Report Scheduler

on:
  workflow_dispatch:
  schedule:
    - cron: '15 14 * * 1-5'   # Weekdays 07:15 PT

permissions:
  contents: read

concurrency:
  group: universal-report-scheduler
  cancel-in-progress: true

jobs:
  precheck:
    runs-on: ubuntu-latest
    outputs:
      ok: ${{ steps.p.outputs.ok }}
      run_morning_report: ${{ steps.tog.outputs.run_morning_report }}
      run_color_guard: ${{ steps.tog.outputs.run_color_guard }}
      run_econ_calendar: ${{ steps.tog.outputs.run_econ_calendar }}
      run_uptime_ping: ${{ steps.tog.outputs.run_uptime_ping }}
    steps:
      - uses: actions/checkout@v4
      - id: p
        uses: ./.github/actions/precheck
        with:
          vega_actions_enabled: ${{ vars.VEGA_ACTIONS_ENABLED }}
      - id: tog
        run: |
          echo "run_morning_report=true" >> "$GITHUB_OUTPUT"
          echo "run_color_guard=true" >> "$GITHUB_OUTPUT"
          echo "run_econ_calendar=true" >> "$GITHUB_OUTPUT"
          echo "run_uptime_ping=true" >> "$GITHUB_OUTPUT"

  morning_report:
    needs: precheck
    if: ${{ needs.precheck.outputs.ok == 'true' && needs.precheck.outputs.run_morning_report == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            pyproject.toml
      - name: Build NA Morning Report
        run: python scripts/morning_report_na.py --tz America/Los_Angeles --out output/morning_report.md
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: morning-report-na
          path: output/morning_report.md
          retention-days: 14
          compression-level: 6
      - run: |
          echo "### Morning Report ✅" >> $GITHUB_STEP_SUMMARY
          echo "- File: output/morning_report.md" >> $GITHUB_STEP_SUMMARY

  color_guard:
    needs: precheck
    if: ${{ needs.precheck.outputs.ok == 'true' && needs.precheck.outputs.run_color_guard == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Run Color Guard
        run: |
          mkdir -p outputs/color_guard
          python scripts/color_guard.py
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: color-guard
          path: |
            output/color_guard/**
            outputs/color_guard/**
          retention-days: 14
          compression-level: 6
      - run: |
          echo "### Color Guard ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Files: output(s)/color_guard/*" >> $GITHUB_STEP_SUMMARY

  econ_calendar:
    needs: precheck
    if: ${{ needs.precheck.outputs.ok == 'true' && needs.precheck.outputs.run_econ_calendar == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Run Econ Calendar
        run: |
          mkdir -p outputs/econ_calendar
          python scripts/econ_calendar.py
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: econ-calendar
          path: |
            output/econ_calendar/**
            outputs/econ_calendar/**
          retention-days: 14
          compression-level: 6
      - run: |
          echo "### Econ Calendar ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Files: output(s)/econ_calendar/*" >> $GITHUB_STEP_SUMMARY

  uptime_ping:
    needs: precheck
    if: ${{ needs.precheck.outputs.ok == 'true' && needs.precheck.outputs.run_uptime_ping == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Run Uptime Ping
        run: python scripts/uptime_ping.py
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: uptime-ping
          path: |
            output/uptime_ping/**
            outputs/uptime_ping/**
          retention-days: 14
          compression-level: 6
      - run: |
          echo "### Uptime Ping ✅" >> $GITHUB_STEP_SUMMARY
          echo "- Files: output(s)/uptime_ping/*" >> $GITHUB_STEP_SUMMARY

  notify_on_fail:
    needs: [precheck, morning_report, color_guard, econ_calendar, uptime_ping]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Send failure email (SendGrid)
        env:
          SG_KEY: ${{ secrets.SENDGRID_API_KEY }}
          FROM:  ${{ vars.SENDGRID_FROM }}
          TO:    ${{ vars.SENDGRID_TO }}
          RUNURL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          BRANCH: ${{ github.ref_name }}
          WORKFLOW: ${{ github.workflow }}
        run: |
          if [ -z "${SG_KEY:-}" ]; then
            echo "No SENDGRID_API_KEY secret; skipping email."
            exit 0
          fi
          body=$(jq -n --arg s "❌ $WORKFLOW failed on $BRANCH" \
                       --arg c "See run: $RUNURL" \
                 '{personalizations:[{to:[{email:env.TO}]}],from:{email:env.FROM},
                   subject:$s,content:[{type:"text/plain",value:$c}]}')
          curl -sS -X POST https://api.sendgrid.com/v3/mail/send \
            -H "Authorization: Bearer $SG_KEY" -H "Content-Type: application/json" \
            -d "$body"
