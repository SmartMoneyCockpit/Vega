name: issue-to-alert-yaml
on:
  push:
    branches: [ main ]

  workflow_dispatch:

  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  issues: write

jobs:
  write-file:
    if: startsWith(github.event.issue.title, 'Alert YAML:') || contains(join(github.event.issue.labels.*.name, ','), 'alert-yaml')
    runs-on: ubuntu-latest
    steps:
      - id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body || '';
            const fileMatch = body.match(/^\s*filename:\s*([^\s]+\.ya?ml)\s*$/mi);
            if (!fileMatch) core.setFailed('Missing `filename:` line (e.g., `filename: config/alerts/na-2025-08-25.yaml`).');
            const path = fileMatch[1].trim();
            if (!/^config\/alerts\/.+\.ya?ml$/i.test(path)) core.setFailed('`filename:` must be under config/alerts/ and end with .yaml/.yml');
            const code = body.match(/```(?:yaml|yml)\n([\s\S]*?)```/i);
            if (!code) core.setFailed('Wrap your YAML in a fenced block: ```yaml ... ```');
            core.setOutput('path', path);
            core.setOutput('yaml', code[1].trim() + '\n');

      - name: Write file via GitHub API
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner, repo = context.repo.repo;
            const path = `${{ steps.parse.outputs.path }}`;
            const yaml = `${{ steps.parse.outputs.yaml }}`;

            // Fetch sha if file exists
            let sha;
            try {
              const cur = await github.rest.repos.getContent({ owner, repo, path, ref: 'main' });
              if (!Array.isArray(cur.data)) sha = cur.data.sha;
            } catch (e) {
              if (e.status !== 404) throw e;
            }

            const content = Buffer.from(yaml, 'utf8').toString('base64');
            const res = await github.rest.repos.createOrUpdateFileContents({
              owner, repo, path, content, sha, branch: 'main',
              message: `chore(alerts): update ${path} from Issue #${context.payload.issue.number}`
            });

            await github.rest.issues.createComment({
              owner, repo, issue_number: context.payload.issue.number,
              body: `✅ Wrote **${path}** → ${res.data.content.html_url}`
            });
