name: Color Guard

on:
  workflow_call:
    inputs:
      enabled: { type: string, required: false, default: 'true' }
      upload_artifacts: { type: string, required: false, default: 'true' }

permissions:
  contents: read

jobs:
  build:
    if: ${{ inputs.enabled == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11', cache: 'pip' }

      - name: Install Python deps if present
        shell: bash
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f setup.py ] || [ -f pyproject.toml ]; then pip install -e .; fi

      - name: Build Color Guard snapshot
        id: run
        shell: bash
        run: |
          set -e
          mkdir -p artifacts/color_guard outputs/color_guard
          ts="$(date +'%Y-%m-%d_%H-%M-%S')"
          python scripts/color_guard_build.py --out "outputs/color_guard/color_guard_${ts}.json"
          cp -r outputs/color_guard/* artifacts/color_guard/
          echo "ts=$ts" >> "$GITHUB_OUTPUT"

      - name: Job summary
        shell: bash
        run: |
          echo "## Color Guard" >> "$GITHUB_STEP_SUMMARY"
          if ls artifacts/color_guard/* >/dev/null 2>&1; then echo "- Snapshot generated ✅" >> "$GITHUB_STEP_SUMMARY"; else echo "- No snapshot generated ⚠️" >> "$GITHUB_STEP_SUMMARY"; fi

      - name: Upload artifacts
        if: ${{ inputs.upload_artifacts == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: color_guard_${{ steps.run.outputs.ts }}
          path: artifacts/color_guard/**
          if-no-files-found: warn
          retention-days: 14
