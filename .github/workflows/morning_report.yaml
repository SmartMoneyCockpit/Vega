name: Morning Report (NA)
true:
  push:
    branches:
    - main
  schedule:
  - cron: 25 14 * * 1-5
  workflow_dispatch: null
concurrency:
  group: morning-report
  cancel-in-progress: false
permissions:
  contents: read
env:
  TZ: America/Los_Angeles
jobs:
  precheck:
    runs-on: ubuntu-latest
    outputs:
      ok: ${{ steps.p.outputs.ok }}
    steps:
    - uses: actions/checkout@v4
    - id: p
      uses: ./.github/actions/precheck
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Install deps
      run: 'python -m pip install --upgrade pip

        pip install pyyaml reportlab

        mkdir -p vault/exports vault/reports vault/snapshots vault/cache snapshots

        '
    - name: Generate Morning Report JSON + Markdown + PDF
      run: "python - <<'PY'\nimport os, json, datetime as dt\nfrom zoneinfo import\
        \ ZoneInfo\nfrom pathlib import Path\nfrom reportlab.lib.pagesizes import\
        \ LETTER\nfrom reportlab.pdfgen import canvas\nimport yaml\n\n# dirs\nPath(\"\
        vault/exports\").mkdir(parents=True, exist_ok=True)\nPath(\"snapshots\").mkdir(parents=True,\
        \ exist_ok=True)\n\n# optional config\ncfg = {}\nfor p in (\"config.yaml\"\
        ,\"configs/vega_rules.yaml\",\"config/vega_rules.yaml\"):\n    if Path(p).exists():\n\
        \        try:\n            cfg = yaml.safe_load(open(p, \"r\", encoding=\"\
        utf-8\")) or {}\n            break\n        except Exception:\n          \
        \  pass\n\n# timestamps\nnow_utc = dt.datetime.now(dt.timezone.utc)\ntz =\
        \ os.getenv(\"TZ\",\"America/Los_Angeles\")\nnow_local = now_utc.astimezone(ZoneInfo(tz))\n\
        date_str = now_local.strftime(\"%Y-%m-%d\")\n\n# JSON\nout = {\n    \"generated_at_utc\"\
        :   now_utc.strftime(\"%Y-%m-%dT%H:%M:%SZ\"),\n    \"generated_at_local\"\
        : now_local.strftime(\"%Y-%m-%d %H:%M %Z\"),\n    \"notes\": \"Morning NA\
        \ report scaffold; wire provider data in app/CI.\",\n    \"version\": (cfg.get(\"\
        app\") or {}).get(\"version\",\"final_build\"),\n}\nwith open(\"snapshots/morning_report.json\"\
        ,\"w\",encoding=\"utf-8\") as f:\n    json.dump(out,f,indent=2)\n\n# Markdown\n\
        with open(\"snapshots/morning_report.md\",\"w\",encoding=\"utf-8\") as f:\n\
        \    f.write(f\"# Morning Report (NA) \u2014 {now_local:%Y-%m-%d %H:%M %Z}\\\
        n\\n\")\n    f.write(f\"- Generated UTC: {out['generated_at_utc']}\\n\")\n\
        \    f.write(\"- Sections: scaffold\\n\")\n\n# PDF (simple one-pager)\npdf_path\
        \ = Path(f\"vault/exports/daily-report-{date_str}.pdf\")\nc = canvas.Canvas(str(pdf_path),\
        \ pagesize=LETTER)\nW,H = LETTER\ny = H - 72\nc.setFont(\"Helvetica-Bold\"\
        ,16)\nc.drawString(72,y, \"Vega \u2013 Morning Report (NA)\")\ny -= 22\nc.setFont(\"\
        Helvetica\",10)\nc.drawString(72,y, f\"Generated (local): {out['generated_at_local']}\"\
        )\ny -= 14\nc.drawString(72,y, f\"Generated (UTC):   {out['generated_at_utc']}\"\
        )\ny -= 28\nc.setFont(\"Helvetica-Bold\",12)\nc.drawString(72,y, \"Notes\"\
        )\ny -= 16\nc.setFont(\"Helvetica\",10)\nc.drawString(90,y, \"Scaffold only\
        \ \u2014 integrate provider data in the app/CI.\")\nc.showPage()\nc.save()\n\
        print(f\"PDF_WRITTEN={pdf_path}\")\nPY\n"
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: morning-report
        path: 'snapshots/morning_report.json

          snapshots/morning_report.md

          vault/exports/daily-report-*.pdf

          '
        retention-days: 7
    - name: Email latest daily PDF
      env:
        VEGA_EMAIL_HOST: smtp.gmail.com
        VEGA_EMAIL_PORT: 465
        VEGA_EMAIL_USER: blainedares@gmail.com
        VEGA_EMAIL_PASS: svhkptwyvlobdzvj
        VEGA_EMAIL_TO: blainedares@gmail.com
        PYTHONPATH: .
      run: "python - <<'PY'\nimport glob, os\nfrom tools.emailer import send_email\n\
        pdfs = sorted(glob.glob('vault/exports/daily-report-*.pdf'))\nif not pdfs:\n\
        \    raise SystemExit(\"No PDF found in vault/exports\")\nlatest = pdfs[-1]\n\
        send_email(\n    subject=\"Vega \u2013 Daily Report (NA)\",\n    html_body=f\"\
        <p>Attached: {os.path.basename(latest)}</p>\",\n    attachments=[latest],\n\
        )\nprint(\"EMAIL_OK\")\nPY\n"
    needs: precheck
    if: ${{ needs.precheck.outputs.ok == 'true' && github.ref == 'refs/heads/main'
      }}
  notify_failure:
    needs:
    - build
    - precheck
    if: ${{ (failure()) && needs.precheck.outputs.ok == 'true' && github.ref == 'refs/heads/main'
      }}
    runs-on: ubuntu-latest
    steps:
    - name: Email failure notice
      env:
        VEGA_EMAIL_HOST: smtp.gmail.com
        VEGA_EMAIL_PORT: 465
        VEGA_EMAIL_USER: blainedares@gmail.com
        VEGA_EMAIL_PASS: svhkptwyvlobdzvj
        VEGA_EMAIL_TO: blainedares@gmail.com
        PYTHONPATH: .
      run: "python - <<'PY'\nfrom tools.emailer import send_email\nsend_email(\n \
        \ subject=\"Vega \u2013 Morning Report FAILED\",\n  html_body=\"<p>The morning\
        \ workflow failed. Check Actions logs.</p>\",\n)\nprint(\"FAIL_EMAIL_SENT\"\
        )\nPY\n"
