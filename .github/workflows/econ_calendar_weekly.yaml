name: Econ Calendar (Weekly)
true:
  push:
    branches:
    - main
  schedule:
  - cron: 0 14 * * 1
  workflow_dispatch: null
jobs:
  precheck:
    runs-on: ubuntu-latest
    outputs:
      ok: ${{ steps.p.outputs.ok }}
    steps:
    - uses: actions/checkout@v4
    - id: p
      uses: ./.github/actions/precheck
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Build next-7-days calendar JSON
      run: "python - << 'PY'\nimport yaml, json, datetime as dt, os\nfrom pathlib\
        \ import Path\n\npath = \"config/econ_calendar.yaml\"\ndata = []\nif os.path.exists(path):\n\
        \  with open(path, \"r\", encoding=\"utf-8\") as f:\n    data = yaml.safe_load(f)\
        \ or []\n\ntoday = dt.date.today()\nnext7 = today + dt.timedelta(days=7)\n\
        \nweek = [e for e in data\n        if isinstance(e, dict)\n        and \"\
        date\" in e\n        and today.isoformat() <= e[\"date\"] <= next7.isoformat()]\n\
        \nout = {\n  \"generated_utc\": dt.datetime.utcnow().isoformat() + \"Z\",\n\
        \  \"window\": {\"start\": today.isoformat(), \"end\": next7.isoformat()},\n\
        \  \"events\": week\n}\n\nPath(\"snapshots\").mkdir(exist_ok=True)\nwith open(\"\
        snapshots/econ_week.json\", \"w\", encoding=\"utf-8\") as f:\n  json.dump(out,\
        \ f, indent=2)\nPY\n"
    - uses: actions/upload-artifact@v4
      with:
        name: econ-week
        path: snapshots/econ_week.json
        retention-days: 7
    needs: precheck
    if: ${{ needs.precheck.outputs.ok == 'true' && github.ref == 'refs/heads/main'
      }}
