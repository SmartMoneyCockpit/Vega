name: Morning Report NA

on:
  workflow_call:
    inputs:
      enabled:
        type: string
        required: false
        default: 'true'
      timezone:
        type: string
        required: false
        default: 'America/Los_Angeles'
      upload_artifacts:
        type: string
        required: false
        default: 'true'

permissions:
  contents: read

jobs:
  build:
    if: ${{ inputs.enabled == 'true' }}
    runs-on: ubuntu-latest
    env:
      TZ: ${{ inputs.timezone }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python deps if present
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f setup.py ] || [ -f pyproject.toml ]; then pip install -e .; fi

      - name: Generate Morning Report (Markdown) — tolerant
        id: run
        run: |
          set -e
          mkdir -p artifacts/morning_report outputs/morning_report
          ts="$(date +'%Y-%m-%d_%H-%M-%S')"
          OUT="outputs/morning_report/morning_na_${ts}.md"
          if [ -f scripts/morning_report_na.py ]; then
            python scripts/morning_report_na.py --tz "$TZ" --out "$OUT" || {
              echo "# Morning Report (Placeholder)" > "$OUT"
              echo "" >> "$OUT"
              echo "_Auto-generated placeholder because morning_report_na.py failed._" >> "$OUT"
            }
          else
            echo "# Morning Report (Placeholder)" > "$OUT"
            echo "" >> "$OUT"
            echo "_Auto-generated placeholder because morning_report_na.py was not found._" >> "$OUT"
          fi
          cp outputs/morning_report/* artifacts/morning_report/
          echo "ts=$ts" >> "$GITHUB_OUTPUT"

      - name: Convert MD → PDF (robust fallback)
        run: |
          set -e
          MD="artifacts/morning_report/morning_na_${{ steps.run.outputs.ts }}.md"
          OUTPDF="artifacts/morning_report/morning_na_${{ steps.run.outputs.ts }}.pdf"

          if [ ! -f "$MD" ]; then
            echo "::notice title=PDF::Markdown file not found; skipping PDF."
            exit 0
          fi

          ok_pdf() { [ -f "$OUTPDF" ] && [ -s "$OUTPDF" ]; }

          # Attempt 1: md-to-pdf
          sudo apt-get update -y || true
          sudo apt-get install -y xvfb curl ca-certificates || true
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash - || true
          sudo apt-get install -y nodejs || true
          sudo npm i -g md-to-pdf || true
          if command -v md-to-pdf >/dev/null 2>&1; then
            xvfb-run -a md-to-pdf "$MD" --output "$OUTPDF" || true
          fi

          # Attempt 2: Python markdown + wkhtmltopdf fallback
          if ! ok_pdf ; then
            echo "::notice title=PDF::md-to-pdf failed; trying wkhtmltopdf fallback."
            python - <<'PY'
import importlib, subprocess, sys
try: importlib.import_module("markdown")
except Exception: subprocess.check_call([sys.executable,"-m","pip","install","markdown"])
PY
            sudo apt-get install -y wkhtmltopdf || true
            TMPHTML="$(mktemp --suffix=.html)"
            python - <<'PY' "$MD" "$TMPHTML"
import sys, pathlib, markdown
md_path, html_path = sys.argv[1], sys.argv[2]
html = markdown.markdown(pathlib.Path(md_path).read_text(encoding="utf-8"))
pathlib.Path(html_path).write_text(
    "<meta charset='utf-8'><div style='font-family:Arial,Helvetica,sans-serif;white-space:pre-wrap'>"
    + html + "</div>", encoding="utf-8"
)
PY
            if command -v wkhtmltopdf >/dev/null 2>&1; then
              wkhtmltopdf "$TMPHTML" "$OUTPDF" || true
            else
              echo "::notice title=PDF::wkhtmltopdf not available; skipping."
            fi
          fi

          if ok_pdf ; then
            echo "PDF created at $OUTPDF"
          else
            echo "::notice title=PDF::All converters failed; continuing without PDF."
          fi

      - name: Job summary
        run: |
          echo "## Morning Report (NA)" >> "$GITHUB_STEP_SUMMARY"
          echo "- Timezone: \`${TZ}\`" >> "$GITHUB_STEP_SUMMARY"
          echo "- Timestamp: \`${{ steps.run.outputs.ts }}\`" >> "$GITHUB_STEP_SUMMARY"
          if ls artifacts/morning_report/*.md >/dev/null 2>&1; then echo "- MD generated ✅" >> "$GITHUB_STEP_SUMMARY"; else echo "- MD missing ⚠️" >> "$GITHUB_STEP_SUMMARY"; fi
          if ls artifacts/morning_report/*.pdf >/dev/null 2>&1; then echo "- PDF generated ✅" >> "$GITHUB_STEP_SUMMARY"; else echo "- PDF missing ⚠️" >> "$GITHUB_STEP_SUMMARY"; fi

      - name: Upload artifacts
        if: ${{ inputs.upload_artifacts == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: morning_report_${{ steps.run.outputs.ts }}
          path: artifacts/morning_report/**
          if-no-files-found: warn
          retention-days: 14
