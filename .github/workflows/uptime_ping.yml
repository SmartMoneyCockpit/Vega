name: Uptime Ping

on:
  workflow_call:
    inputs:
      enabled: { type: string, required: false, default: 'true' }
      url:     { type: string, required: false, default: '' }
      method:  { type: string, required: false, default: 'GET' }
      expect:  { type: string, required: false, default: '200' }
    secrets:
      UPTIME_PING_URL: { required: false }

permissions: {}

jobs:
  build:
    # Only run if enabled AND a URL is provided (input or secret)
    if: ${{ inputs.enabled == 'true' && (inputs.url != '' || secrets.UPTIME_PING_URL != '') }}
    runs-on: ubuntu-latest
    steps:
      - name: Resolve URL
        id: cfg
        shell: bash
        env:
          U_SECRET: ${{ secrets.UPTIME_PING_URL }}
          U_INPUT:  ${{ inputs.url }}
        run: |
          url="${U_INPUT:-$U_SECRET}"
          echo "url=$url" >> "$GITHUB_OUTPUT"

      - name: Ping
        id: ping
        shell: bash
        env:
          URL:    ${{ steps.cfg.outputs.url }}
          METHOD: ${{ inputs.method }}
          EXPECT: ${{ inputs.expect }}
        run: |
          set -e
          code=$(curl -s -o /dev/null -w "%{http_code}" -X "$METHOD" "$URL")
          echo "status_code=$code" >> "$GITHUB_OUTPUT"
          if [ "$code" != "$EXPECT" ]; then
            echo "::error title=Uptime Ping::Expected $EXPECT but got $code ($METHOD $URL)"
            exit 1
          fi
          echo "OK ($code)"

      - name: Job summary
        run: |
          echo "## Uptime Ping" >> "$GITHUB_STEP_SUMMARY"
          echo "- URL: \`${{ steps.cfg.outputs.url }}\`" >> "$GITHUB_STEP_SUMMARY"
          echo "- HTTP status: \`${{ steps.ping.outputs.status_code }}\`" >> "$GITHUB_STEP_SUMMARY"
